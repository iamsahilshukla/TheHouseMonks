import { Schema, model } from 'mongoose';
import { ObjectId } from 'mongodb';

const invoiceSchema = new Schema({
    name: String,
    email: String,
    amount: Number,
    purpose: String,
    description: String,
    status: {
        type: String,
        enum: ['unpaid', 'paid'],
        default: 'unpaid',
    },
    payment_link: [String], // As it can be multiple paymentLinks generated by user.
    payment_id: String,
    payment_request_id: String,
    payment_status: {
        type: String,
        enum: ['Pending', 'Completed', 'Failed', 'Credit'],
        default: 'Pending',
    },
    payment_date: Date
});


const Invoice = model('Invoice', invoiceSchema);

const insertMany = async (invoices) => {
    return await Invoice.insertMany(invoices);
};


const find = async () => {
    return await Invoice.find();
};

const findById = async (id) => {
    try {
        const invoice = await Invoice.findById({ _id: new ObjectId(id) });
        return invoice;
    } catch (err) {
        throw new Error('Could not find invoice');
    }
};

const findOne = async (query) => {
    try {
        const invoice = await Invoice.findOne(query);
        return invoice;
    } catch (err) {
        throw new Error('Could not find invoice');
    }
};

const updateInvoice = async (id, update) => {
    try {
        const invoice = await Invoice.findByIdAndUpdate(id, update, { new: true });
        return invoice;
    } catch (err) {
        throw new Error('Could not update invoice');
    }
};

export { Invoice, insertMany, find, findById, findOne, updateInvoice};
